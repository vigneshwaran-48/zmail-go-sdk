/*
Zoho Mail API

This is a Zoho Mail API OpenAPI 3.0 specification

API version: 1.0.0
Contact: vigneshwaran4817@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zmail

import (
	"encoding/json"
)

// checks if the SendMailDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendMailDetails{}

// SendMailDetails struct for SendMailDetails
type SendMailDetails struct {
	SendMailId *string `json:"sendMailId,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	ServerName *string `json:"serverName,omitempty"`
	ServerPort *int32 `json:"serverPort,omitempty"`
	UserName *string `json:"userName,omitempty"`
	ConnectionType *string `json:"connectionType,omitempty"`
	FromAddress *string `json:"fromAddress,omitempty"`
	Status *bool `json:"status,omitempty"`
}

// NewSendMailDetails instantiates a new SendMailDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendMailDetails() *SendMailDetails {
	this := SendMailDetails{}
	return &this
}

// NewSendMailDetailsWithDefaults instantiates a new SendMailDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendMailDetailsWithDefaults() *SendMailDetails {
	this := SendMailDetails{}
	return &this
}

// GetSendMailId returns the SendMailId field value if set, zero value otherwise.
func (o *SendMailDetails) GetSendMailId() string {
	if o == nil || IsNil(o.SendMailId) {
		var ret string
		return ret
	}
	return *o.SendMailId
}

// GetSendMailIdOk returns a tuple with the SendMailId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailDetails) GetSendMailIdOk() (*string, bool) {
	if o == nil || IsNil(o.SendMailId) {
		return nil, false
	}
	return o.SendMailId, true
}

// HasSendMailId returns a boolean if a field has been set.
func (o *SendMailDetails) HasSendMailId() bool {
	if o != nil && !IsNil(o.SendMailId) {
		return true
	}

	return false
}

// SetSendMailId gets a reference to the given string and assigns it to the SendMailId field.
func (o *SendMailDetails) SetSendMailId(v string) {
	o.SendMailId = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *SendMailDetails) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailDetails) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *SendMailDetails) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *SendMailDetails) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *SendMailDetails) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailDetails) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *SendMailDetails) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *SendMailDetails) SetServerName(v string) {
	o.ServerName = &v
}

// GetServerPort returns the ServerPort field value if set, zero value otherwise.
func (o *SendMailDetails) GetServerPort() int32 {
	if o == nil || IsNil(o.ServerPort) {
		var ret int32
		return ret
	}
	return *o.ServerPort
}

// GetServerPortOk returns a tuple with the ServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailDetails) GetServerPortOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerPort) {
		return nil, false
	}
	return o.ServerPort, true
}

// HasServerPort returns a boolean if a field has been set.
func (o *SendMailDetails) HasServerPort() bool {
	if o != nil && !IsNil(o.ServerPort) {
		return true
	}

	return false
}

// SetServerPort gets a reference to the given int32 and assigns it to the ServerPort field.
func (o *SendMailDetails) SetServerPort(v int32) {
	o.ServerPort = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *SendMailDetails) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailDetails) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *SendMailDetails) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *SendMailDetails) SetUserName(v string) {
	o.UserName = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *SendMailDetails) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailDetails) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *SendMailDetails) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *SendMailDetails) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *SendMailDetails) GetFromAddress() string {
	if o == nil || IsNil(o.FromAddress) {
		var ret string
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailDetails) GetFromAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *SendMailDetails) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given string and assigns it to the FromAddress field.
func (o *SendMailDetails) SetFromAddress(v string) {
	o.FromAddress = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SendMailDetails) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailDetails) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SendMailDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *SendMailDetails) SetStatus(v bool) {
	o.Status = &v
}

func (o SendMailDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendMailDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SendMailId) {
		toSerialize["sendMailId"] = o.SendMailId
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ServerName) {
		toSerialize["serverName"] = o.ServerName
	}
	if !IsNil(o.ServerPort) {
		toSerialize["serverPort"] = o.ServerPort
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableSendMailDetails struct {
	value *SendMailDetails
	isSet bool
}

func (v NullableSendMailDetails) Get() *SendMailDetails {
	return v.value
}

func (v *NullableSendMailDetails) Set(val *SendMailDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSendMailDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSendMailDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendMailDetails(val *SendMailDetails) *NullableSendMailDetails {
	return &NullableSendMailDetails{value: val, isSet: true}
}

func (v NullableSendMailDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendMailDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


