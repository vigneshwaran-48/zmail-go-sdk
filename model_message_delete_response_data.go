/*
Zoho Mail API

This is a Zoho Mail API OpenAPI 3.0 specification

API version: 1.0.0
Contact: vigneshwaran4817@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zmail

import (
	"encoding/json"
)

// checks if the MessageDeleteResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageDeleteResponseData{}

// MessageDeleteResponseData struct for MessageDeleteResponseData
type MessageDeleteResponseData struct {
	CId *string `json:"cId,omitempty"`
}

// NewMessageDeleteResponseData instantiates a new MessageDeleteResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageDeleteResponseData() *MessageDeleteResponseData {
	this := MessageDeleteResponseData{}
	return &this
}

// NewMessageDeleteResponseDataWithDefaults instantiates a new MessageDeleteResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageDeleteResponseDataWithDefaults() *MessageDeleteResponseData {
	this := MessageDeleteResponseData{}
	return &this
}

// GetCId returns the CId field value if set, zero value otherwise.
func (o *MessageDeleteResponseData) GetCId() string {
	if o == nil || IsNil(o.CId) {
		var ret string
		return ret
	}
	return *o.CId
}

// GetCIdOk returns a tuple with the CId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeleteResponseData) GetCIdOk() (*string, bool) {
	if o == nil || IsNil(o.CId) {
		return nil, false
	}
	return o.CId, true
}

// HasCId returns a boolean if a field has been set.
func (o *MessageDeleteResponseData) HasCId() bool {
	if o != nil && !IsNil(o.CId) {
		return true
	}

	return false
}

// SetCId gets a reference to the given string and assigns it to the CId field.
func (o *MessageDeleteResponseData) SetCId(v string) {
	o.CId = &v
}

func (o MessageDeleteResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageDeleteResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CId) {
		toSerialize["cId"] = o.CId
	}
	return toSerialize, nil
}

type NullableMessageDeleteResponseData struct {
	value *MessageDeleteResponseData
	isSet bool
}

func (v NullableMessageDeleteResponseData) Get() *MessageDeleteResponseData {
	return v.value
}

func (v *NullableMessageDeleteResponseData) Set(val *MessageDeleteResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageDeleteResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageDeleteResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageDeleteResponseData(val *MessageDeleteResponseData) *NullableMessageDeleteResponseData {
	return &NullableMessageDeleteResponseData{value: val, isSet: true}
}

func (v NullableMessageDeleteResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageDeleteResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


