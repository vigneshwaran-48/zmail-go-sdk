/*
Zoho Mail API

This is a Zoho Mail API OpenAPI 3.0 specification

API version: 1.0.0
Contact: vigneshwaran4817@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zmail

import (
	"encoding/json"
)

// checks if the AttachmentInfoResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentInfoResponseData{}

// AttachmentInfoResponseData struct for AttachmentInfoResponseData
type AttachmentInfoResponseData struct {
	Attachments []Attachment `json:"attachments,omitempty"`
	MessageId *string `json:"messageId,omitempty"`
}

// NewAttachmentInfoResponseData instantiates a new AttachmentInfoResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentInfoResponseData() *AttachmentInfoResponseData {
	this := AttachmentInfoResponseData{}
	return &this
}

// NewAttachmentInfoResponseDataWithDefaults instantiates a new AttachmentInfoResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentInfoResponseDataWithDefaults() *AttachmentInfoResponseData {
	this := AttachmentInfoResponseData{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *AttachmentInfoResponseData) GetAttachments() []Attachment {
	if o == nil || IsNil(o.Attachments) {
		var ret []Attachment
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentInfoResponseData) GetAttachmentsOk() ([]Attachment, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *AttachmentInfoResponseData) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []Attachment and assigns it to the Attachments field.
func (o *AttachmentInfoResponseData) SetAttachments(v []Attachment) {
	o.Attachments = v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *AttachmentInfoResponseData) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentInfoResponseData) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *AttachmentInfoResponseData) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *AttachmentInfoResponseData) SetMessageId(v string) {
	o.MessageId = &v
}

func (o AttachmentInfoResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentInfoResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	return toSerialize, nil
}

type NullableAttachmentInfoResponseData struct {
	value *AttachmentInfoResponseData
	isSet bool
}

func (v NullableAttachmentInfoResponseData) Get() *AttachmentInfoResponseData {
	return v.value
}

func (v *NullableAttachmentInfoResponseData) Set(val *AttachmentInfoResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentInfoResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentInfoResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentInfoResponseData(val *AttachmentInfoResponseData) *NullableAttachmentInfoResponseData {
	return &NullableAttachmentInfoResponseData{value: val, isSet: true}
}

func (v NullableAttachmentInfoResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentInfoResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


