/*
Zoho Mail API

This is a Zoho Mail API OpenAPI 3.0 specification

API version: 1.0.0
Contact: vigneshwaran4817@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zmail

import (
	"encoding/json"
)

// checks if the SendEmailRequestAttachmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendEmailRequestAttachmentsInner{}

// SendEmailRequestAttachmentsInner struct for SendEmailRequestAttachmentsInner
type SendEmailRequestAttachmentsInner struct {
	// Specifies the name of the attachment. This parameter can be fetched from Upload Attachments API.
	AttachmentName *string `json:"attachmentName,omitempty"`
	// Specifies the path in which the attachment is stored. This parameter can be fetched from Upload Attachments API.
	AttachmentPath *string `json:"attachmentPath,omitempty"`
	// Specifies the name of the store where the attachment is saved. This parameter can be fetched from Upload Attachments API.
	StoreName *string `json:"storeName,omitempty"`
}

// NewSendEmailRequestAttachmentsInner instantiates a new SendEmailRequestAttachmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendEmailRequestAttachmentsInner() *SendEmailRequestAttachmentsInner {
	this := SendEmailRequestAttachmentsInner{}
	return &this
}

// NewSendEmailRequestAttachmentsInnerWithDefaults instantiates a new SendEmailRequestAttachmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendEmailRequestAttachmentsInnerWithDefaults() *SendEmailRequestAttachmentsInner {
	this := SendEmailRequestAttachmentsInner{}
	return &this
}

// GetAttachmentName returns the AttachmentName field value if set, zero value otherwise.
func (o *SendEmailRequestAttachmentsInner) GetAttachmentName() string {
	if o == nil || IsNil(o.AttachmentName) {
		var ret string
		return ret
	}
	return *o.AttachmentName
}

// GetAttachmentNameOk returns a tuple with the AttachmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendEmailRequestAttachmentsInner) GetAttachmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.AttachmentName) {
		return nil, false
	}
	return o.AttachmentName, true
}

// HasAttachmentName returns a boolean if a field has been set.
func (o *SendEmailRequestAttachmentsInner) HasAttachmentName() bool {
	if o != nil && !IsNil(o.AttachmentName) {
		return true
	}

	return false
}

// SetAttachmentName gets a reference to the given string and assigns it to the AttachmentName field.
func (o *SendEmailRequestAttachmentsInner) SetAttachmentName(v string) {
	o.AttachmentName = &v
}

// GetAttachmentPath returns the AttachmentPath field value if set, zero value otherwise.
func (o *SendEmailRequestAttachmentsInner) GetAttachmentPath() string {
	if o == nil || IsNil(o.AttachmentPath) {
		var ret string
		return ret
	}
	return *o.AttachmentPath
}

// GetAttachmentPathOk returns a tuple with the AttachmentPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendEmailRequestAttachmentsInner) GetAttachmentPathOk() (*string, bool) {
	if o == nil || IsNil(o.AttachmentPath) {
		return nil, false
	}
	return o.AttachmentPath, true
}

// HasAttachmentPath returns a boolean if a field has been set.
func (o *SendEmailRequestAttachmentsInner) HasAttachmentPath() bool {
	if o != nil && !IsNil(o.AttachmentPath) {
		return true
	}

	return false
}

// SetAttachmentPath gets a reference to the given string and assigns it to the AttachmentPath field.
func (o *SendEmailRequestAttachmentsInner) SetAttachmentPath(v string) {
	o.AttachmentPath = &v
}

// GetStoreName returns the StoreName field value if set, zero value otherwise.
func (o *SendEmailRequestAttachmentsInner) GetStoreName() string {
	if o == nil || IsNil(o.StoreName) {
		var ret string
		return ret
	}
	return *o.StoreName
}

// GetStoreNameOk returns a tuple with the StoreName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendEmailRequestAttachmentsInner) GetStoreNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoreName) {
		return nil, false
	}
	return o.StoreName, true
}

// HasStoreName returns a boolean if a field has been set.
func (o *SendEmailRequestAttachmentsInner) HasStoreName() bool {
	if o != nil && !IsNil(o.StoreName) {
		return true
	}

	return false
}

// SetStoreName gets a reference to the given string and assigns it to the StoreName field.
func (o *SendEmailRequestAttachmentsInner) SetStoreName(v string) {
	o.StoreName = &v
}

func (o SendEmailRequestAttachmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendEmailRequestAttachmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttachmentName) {
		toSerialize["attachmentName"] = o.AttachmentName
	}
	if !IsNil(o.AttachmentPath) {
		toSerialize["attachmentPath"] = o.AttachmentPath
	}
	if !IsNil(o.StoreName) {
		toSerialize["storeName"] = o.StoreName
	}
	return toSerialize, nil
}

type NullableSendEmailRequestAttachmentsInner struct {
	value *SendEmailRequestAttachmentsInner
	isSet bool
}

func (v NullableSendEmailRequestAttachmentsInner) Get() *SendEmailRequestAttachmentsInner {
	return v.value
}

func (v *NullableSendEmailRequestAttachmentsInner) Set(val *SendEmailRequestAttachmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSendEmailRequestAttachmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSendEmailRequestAttachmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendEmailRequestAttachmentsInner(val *SendEmailRequestAttachmentsInner) *NullableSendEmailRequestAttachmentsInner {
	return &NullableSendEmailRequestAttachmentsInner{value: val, isSet: true}
}

func (v NullableSendEmailRequestAttachmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendEmailRequestAttachmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


