openapi: 3.0.3
info:
  contact:
    email: vigneshwaran4817@gmail.com
  description: This is a Zoho Mail API OpenAPI 3.0 specification
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Zoho Mail API
  version: 1.0.0
externalDocs:
  description: Find out more about the Zoho Mail REST API
  url: https://www.zoho.com/mail/help/api/overview.html
servers:
- url: https://mail.zoho.com
- url: https://mail.zoho.in
- url: https://mail.zoho.eu
- url: https://mail.zoho.jp
- url: https://mail.zohocloud.ca
tags:
- description: The User Mail Account APIs help you to get and update information about
    the mail accounts and the related configurations and settings of the users in
    the organization. The following are part of Mail Accounts API
  externalDocs:
    description: Find out more
    url: https://www.zoho.com/mail/help/api/account-api.html
  name: accounts
- description: The Folder APIs help you to get and update information about the Folder
    details of a particular user account.
  externalDocs:
    description: Find out more
    url: https://www.zoho.com/mail/help/api/folders-api.html
  name: folders
- description: The Label APIs help you to get and update information about the label
    details of a particular user account.
  externalDocs:
    description: Find out more
    url: https://www.zoho.com/mail/help/api/labels-api.html
  name: labels
- description: The Message APIs help you to retrieve messages from the user account
    and access them.
  externalDocs:
    description: Find out more
    url: https://www.zoho.com/mail/help/api/email-api.html
  name: email
paths:
  /api/accounts:
    get:
      description: This API is used to retrieve all the accounts details of the authenticated
        user.
      operationId: getmailaccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsResponse'
          description: Successful operation
        "400":
          description: Invalid input passed
        "404":
          description: Page not found
        "500":
          description: Internal Error
      security:
      - zohomail_auth:
        - ZohoMail.accounts.ALL
        - ZohoMail.accounts.READ
      summary: Get all accounts
      tags:
      - accounts
  /api/accounts/{accountId}:
    get:
      description: Retrieve details of a specific Zoho Mail account.
      operationId: getAccountDetails
      parameters:
      - description: Unique identifier of the account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: Successful response with account details.
        "400":
          description: Invalid input passed
        "404":
          description: Page not found
        "500":
          description: Internal Error
      security:
      - zohomail_auth:
        - ZohoMail.accounts.ALL
        - ZohoMail.accounts.READ
      summary: Get Specific Account Details
      tags:
      - accounts
  /api/accounts/{accountId}/folders:
    get:
      description: This API is used to list all the folders within the specified account.
      operationId: getAllFolders
      parameters:
      - description: The ID of the account where the folder will be listed.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoldersResponse'
          description: Fetched all folders successfully
        "400":
          description: Invalid input passed
        "404":
          description: Page not found
        "500":
          description: Internal Error
      summary: Get all folders of the account
      tags:
      - folders
    post:
      description: Adds a new folder to a specific account.
      operationId: createFolder
      parameters:
      - description: The ID of the account where the folder will be created.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFolder_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResponse'
          description: Folder successfully created.
        "400":
          description: Invalid input passed
        "404":
          description: Page not found
        "500":
          description: Internal Error
      summary: Create a New Folder
      tags:
      - folders
  /api/accounts/{accountId}/folders/{folderId}:
    delete:
      description: "This API is used to delete a specific folder in a specific account,\
        \ using the account ID and the folder ID."
      operationId: deleteFolder
      parameters:
      - description: This key is used to identify the account from which the folders
          have to be fetched. It is generated during account addition.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: This key is used to identify the folder to be fetched.
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoDataResponse'
          description: Deleted folder successfully
        "400":
          description: Invalid input passed
        "404":
          description: Page not found
        "500":
          description: Internal Error
      summary: Delete a folder
      tags:
      - folders
    get:
      description: "This API is used to retrieve a specific folder in a specific account,\
        \ using the account ID and the folder ID."
      operationId: getFolder
      parameters:
      - description: The ID of the account where the folder will be listed.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: This key is used to identify the folder to be fetched.
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResponse'
          description: Fetched folder successfully
        "400":
          description: Invalid input passed
        "404":
          description: Page not found
        "500":
          description: Internal Error
      summary: Get a specific folder of the account
      tags:
      - folders
    put:
      description: This API serves the purpose of updating folders with various modes.
      operationId: updateFolder
      parameters:
      - description: This key is used to identify the account from which the folders
          have to be fetched. It is generated during account addition.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: This key is used to identify the folder to be fetched.
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderUpdatePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoDataResponse'
          description: Updated folder successfully
        "400":
          description: Invalid input passed
        "404":
          description: Page not found
        "500":
          description: Internal Error
      summary: Update a folder
      tags:
      - folders
  /api/accounts/{accountId}/messages/view:
    get:
      description: "The API retrieves a list of all the emails in a specific folder\
        \ or a list of emails based on predefined conditions like status/flags/labels,\
        \ and more."
      operationId: listEmails
      parameters:
      - description: This key is used to identify the account from which the folders
          have to be fetched. It is generated during account addition.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the folder from which the emails need
          to be retrieved. This can be fetched using the Get all folders API.
        explode: true
        in: query
        name: folderId
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The starting sequence number of the emails to be retrieved.
        explode: true
        in: query
        name: start
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The number of emails to be retrieved from the start value mentioned.
          Allowed values:- Min. value:- 1 and max. value:- 200.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Retrieve emails by read or unread status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: all
          enum:
          - read
          - unread
          - all
          type: string
        style: form
      - description: The unique identifier for the flag used to retrieve emails based
          on a specific flag type.
        explode: true
        in: query
        name: flagid
        required: false
        schema:
          description: "Possible values: \n                  0 - flag_not_set\n  \
            \                1 - info\n                  2 - important\n         \
            \         3 - followup"
          format: int32
          type: integer
        style: form
      - description: The unique identifier for the label used to retrieve emails based
          on a specific label.
        explode: true
        in: query
        name: labelid
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier for the flag used to retrieve emails of
          the given threadId.
        explode: true
        in: query
        name: threadId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The basis on which the sorting of the list of emails should be
          done.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: date
          enum:
          - date
          - messageId
          - size
          type: string
        style: form
      - description: The order in which the sorting of the list of emails should be
          done.
        explode: true
        in: query
        name: sortorder
        required: false
        schema:
          default: false
          description: "true for ascending order, false for descending order"
          type: boolean
        style: form
      - description: Whether to details need to be included or not on the list of
          emails retrieved.
        explode: true
        in: query
        name: includeto
        required: false
        schema:
          default: false
          description: "true to include to details, false to not include to details."
          type: boolean
        style: form
      - description: Whether sent emails need to be included or not on the list of
          emails retrieved.
        explode: true
        in: query
        name: includesent
        required: false
        schema:
          default: false
          description: "true to include sent emails, false to not include sent emails."
          type: boolean
        style: form
      - description: Whether archived emails need to be included or not on the list
          of emails retrieved.
        explode: true
        in: query
        name: includearchive
        required: false
        schema:
          default: false
          description: "true to include archived emails, false to not include archived\
            \ emails."
          type: boolean
        style: form
      - description: Retrieve only the emails with attachments.
        explode: true
        in: query
        name: attachedMails
        required: false
        schema:
          default: false
          description: "true to retrieve the emails with attachments, false to retrieve\
            \ all emails."
          type: boolean
        style: form
      - description: Retrieve only the emails with inline images.
        explode: true
        in: query
        name: inlinedMails
        required: false
        schema:
          default: false
          description: "true to retrieve the emails with inline images, false to retrieve\
            \ all emails."
          type: boolean
        style: form
      - description: Retrieve only flagged emails.
        explode: true
        in: query
        name: flaggedMails
        required: false
        schema:
          default: false
          description: "true to retrieve flagged emails, false to retrieve all emails."
          type: boolean
        style: form
      - description: Retrieve only emails with replies.
        explode: true
        in: query
        name: respondedMails
        required: false
        schema:
          default: false
          description: "true to retrieve emails with replies, false to retrieve all\
            \ emails."
          type: boolean
        style: form
      - description: Retrieve emails that are a part of conversations.
        explode: true
        in: query
        name: threadedMails
        required: false
        schema:
          default: false
          description: "true to retrieve threaded emails, false to retrieve all emails."
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsResponse'
          description: Fetched emails successfully
        "400":
          description: Invalid input passed
        "404":
          description: Page not found
        "500":
          description: Internal Error
      summary: Retrieves emails
      tags:
      - email
components:
  schemas:
    NoDataResponse:
      example:
        status:
          code: 200
          description: success
      properties:
        status:
          $ref: '#/components/schemas/Status'
      type: object
    AccountsResponse:
      example:
        data:
        - accountDisplayName: Rebecca
          sendMailDetails:
          - sendMailId: sendMailId
            displayName: displayName
            serverName: serverName
            fromAddress: fromAddress
            serverPort: 0
            userName: userName
            connectionType: connectionType
            status: true
          - sendMailId: sendMailId
            displayName: displayName
            serverName: serverName
            fromAddress: fromAddress
            serverPort: 0
            userName: userName
            connectionType: connectionType
            status: true
          address:
            country: country
            streetAddr: streetAddr
            city: city
            postalCode: postalCode
            state: state
          accountName: bizdemo
          popAccessEnabled: true
          imapAccessEnabled: true
          type: ZOHO_ACCOUNT
          URI: https://mail.zoho.com/api/accounts/2560636000000008002
          mailForward:
          - mailForwardTo: mailForwardTo
            type: type
            status: status
          - mailForwardTo: mailForwardTo
            type: type
            status: status
          accountId: "2560636000000008002"
          incomingUserName: rebecca@zylker.com
          emailAddress:
          - isAlias: true
            isPrimary: true
            mailId: mailId
            isConfirmed: true
          - isAlias: true
            isPrimary: true
            mailId: mailId
            isConfirmed: true
          mailboxStatus: enabled
          vacationResponse:
          - fromDate: 2000-01-23
            accountId: accountId
            subject: subject
            toDate: 2000-01-23
            content: content
            vacationId: vacationId
          - fromDate: 2000-01-23
            accountId: accountId
            subject: subject
            toDate: 2000-01-23
            content: content
            vacationId: vacationId
          smtpStatus: true
        - accountDisplayName: Rebecca
          sendMailDetails:
          - sendMailId: sendMailId
            displayName: displayName
            serverName: serverName
            fromAddress: fromAddress
            serverPort: 0
            userName: userName
            connectionType: connectionType
            status: true
          - sendMailId: sendMailId
            displayName: displayName
            serverName: serverName
            fromAddress: fromAddress
            serverPort: 0
            userName: userName
            connectionType: connectionType
            status: true
          address:
            country: country
            streetAddr: streetAddr
            city: city
            postalCode: postalCode
            state: state
          accountName: bizdemo
          popAccessEnabled: true
          imapAccessEnabled: true
          type: ZOHO_ACCOUNT
          URI: https://mail.zoho.com/api/accounts/2560636000000008002
          mailForward:
          - mailForwardTo: mailForwardTo
            type: type
            status: status
          - mailForwardTo: mailForwardTo
            type: type
            status: status
          accountId: "2560636000000008002"
          incomingUserName: rebecca@zylker.com
          emailAddress:
          - isAlias: true
            isPrimary: true
            mailId: mailId
            isConfirmed: true
          - isAlias: true
            isPrimary: true
            mailId: mailId
            isConfirmed: true
          mailboxStatus: enabled
          vacationResponse:
          - fromDate: 2000-01-23
            accountId: accountId
            subject: subject
            toDate: 2000-01-23
            content: content
            vacationId: vacationId
          - fromDate: 2000-01-23
            accountId: accountId
            subject: subject
            toDate: 2000-01-23
            content: content
            vacationId: vacationId
          smtpStatus: true
        status:
          code: 200
          description: success
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          items:
            $ref: '#/components/schemas/Account'
          type: array
      type: object
    AccountResponse:
      example:
        data:
          accountDisplayName: Rebecca
          sendMailDetails:
          - sendMailId: sendMailId
            displayName: displayName
            serverName: serverName
            fromAddress: fromAddress
            serverPort: 0
            userName: userName
            connectionType: connectionType
            status: true
          - sendMailId: sendMailId
            displayName: displayName
            serverName: serverName
            fromAddress: fromAddress
            serverPort: 0
            userName: userName
            connectionType: connectionType
            status: true
          address:
            country: country
            streetAddr: streetAddr
            city: city
            postalCode: postalCode
            state: state
          accountName: bizdemo
          popAccessEnabled: true
          imapAccessEnabled: true
          type: ZOHO_ACCOUNT
          URI: https://mail.zoho.com/api/accounts/2560636000000008002
          mailForward:
          - mailForwardTo: mailForwardTo
            type: type
            status: status
          - mailForwardTo: mailForwardTo
            type: type
            status: status
          accountId: "2560636000000008002"
          incomingUserName: rebecca@zylker.com
          emailAddress:
          - isAlias: true
            isPrimary: true
            mailId: mailId
            isConfirmed: true
          - isAlias: true
            isPrimary: true
            mailId: mailId
            isConfirmed: true
          mailboxStatus: enabled
          vacationResponse:
          - fromDate: 2000-01-23
            accountId: accountId
            subject: subject
            toDate: 2000-01-23
            content: content
            vacationId: vacationId
          - fromDate: 2000-01-23
            accountId: accountId
            subject: subject
            toDate: 2000-01-23
            content: content
            vacationId: vacationId
          smtpStatus: true
        status:
          code: 200
          description: success
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          $ref: '#/components/schemas/Account'
      type: object
    FolderResponse:
      example:
        data:
          path: /new
          previousFolderId: "2560636000000076001"
          isArchived: 0
          folderName: new
          imapAccess: true
          folderType: Inbox
          URI: https://mail.zoho.com/api/accounts/N****C0CM/folders/2560636000000076007
          folderId: "2560636000000076007"
        status:
          code: 200
          description: success
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          $ref: '#/components/schemas/Folder'
      type: object
    FoldersResponse:
      example:
        data:
        - path: /new
          previousFolderId: "2560636000000076001"
          isArchived: 0
          folderName: new
          imapAccess: true
          folderType: Inbox
          URI: https://mail.zoho.com/api/accounts/N****C0CM/folders/2560636000000076007
          folderId: "2560636000000076007"
        - path: /new
          previousFolderId: "2560636000000076001"
          isArchived: 0
          folderName: new
          imapAccess: true
          folderType: Inbox
          URI: https://mail.zoho.com/api/accounts/N****C0CM/folders/2560636000000076007
          folderId: "2560636000000076007"
        status:
          code: 200
          description: success
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          items:
            $ref: '#/components/schemas/Folder'
          type: array
      type: object
    EmailsResponse:
      example:
        data:
        - summary: summary
          sentDateInGMT: 0
          calendarType: 6
          subject: subject
          messageId: messageId
          threadCount: threadCount
          flagid: flagid
          status2: status2
          priority: priority
          hasInline: hasInline
          toAddress: toAddress
          folderId: folderId
          ccAddress: ccAddress
          threadId: threadId
          hasAttachment: hasAttachment
          size: size
          sender: sender
          receivedTime: 1
          fromAddress: fromAddress
          status: status
        - summary: summary
          sentDateInGMT: 0
          calendarType: 6
          subject: subject
          messageId: messageId
          threadCount: threadCount
          flagid: flagid
          status2: status2
          priority: priority
          hasInline: hasInline
          toAddress: toAddress
          folderId: folderId
          ccAddress: ccAddress
          threadId: threadId
          hasAttachment: hasAttachment
          size: size
          sender: sender
          receivedTime: 1
          fromAddress: fromAddress
          status: status
        status:
          code: 200
          description: success
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          items:
            $ref: '#/components/schemas/Email'
          type: array
      type: object
    Status:
      example:
        code: 200
        description: success
      properties:
        code:
          example: 200
          type: integer
        description:
          example: success
          type: string
      type: object
    Account:
      example:
        accountDisplayName: Rebecca
        sendMailDetails:
        - sendMailId: sendMailId
          displayName: displayName
          serverName: serverName
          fromAddress: fromAddress
          serverPort: 0
          userName: userName
          connectionType: connectionType
          status: true
        - sendMailId: sendMailId
          displayName: displayName
          serverName: serverName
          fromAddress: fromAddress
          serverPort: 0
          userName: userName
          connectionType: connectionType
          status: true
        address:
          country: country
          streetAddr: streetAddr
          city: city
          postalCode: postalCode
          state: state
        accountName: bizdemo
        popAccessEnabled: true
        imapAccessEnabled: true
        type: ZOHO_ACCOUNT
        URI: https://mail.zoho.com/api/accounts/2560636000000008002
        mailForward:
        - mailForwardTo: mailForwardTo
          type: type
          status: status
        - mailForwardTo: mailForwardTo
          type: type
          status: status
        accountId: "2560636000000008002"
        incomingUserName: rebecca@zylker.com
        emailAddress:
        - isAlias: true
          isPrimary: true
          mailId: mailId
          isConfirmed: true
        - isAlias: true
          isPrimary: true
          mailId: mailId
          isConfirmed: true
        mailboxStatus: enabled
        vacationResponse:
        - fromDate: 2000-01-23
          accountId: accountId
          subject: subject
          toDate: 2000-01-23
          content: content
          vacationId: vacationId
        - fromDate: 2000-01-23
          accountId: accountId
          subject: subject
          toDate: 2000-01-23
          content: content
          vacationId: vacationId
        smtpStatus: true
      properties:
        accountId:
          example: "2560636000000008002"
          type: string
        accountDisplayName:
          example: Rebecca
          type: string
        incomingUserName:
          example: rebecca@zylker.com
          type: string
        accountName:
          example: bizdemo
          type: string
        type:
          example: ZOHO_ACCOUNT
          type: string
        mailboxStatus:
          example: enabled
          type: string
        imapAccessEnabled:
          type: boolean
        popAccessEnabled:
          type: boolean
        smtpStatus:
          type: boolean
        mailForward:
          items:
            $ref: '#/components/schemas/MailForward'
          type: array
        emailAddress:
          items:
            $ref: '#/components/schemas/EmailAddress'
          type: array
        vacationResponse:
          items:
            $ref: '#/components/schemas/VacationResponse'
          type: array
        sendMailDetails:
          items:
            $ref: '#/components/schemas/SendMailDetails'
          type: array
        address:
          $ref: '#/components/schemas/Address'
        URI:
          example: https://mail.zoho.com/api/accounts/2560636000000008002
          format: uri
          type: string
      type: object
    MailForward:
      example:
        mailForwardTo: mailForwardTo
        type: type
        status: status
      properties:
        mailForwardTo:
          type: string
        type:
          type: string
        status:
          type: string
      type: object
    EmailAddress:
      example:
        isAlias: true
        isPrimary: true
        mailId: mailId
        isConfirmed: true
      properties:
        isAlias:
          type: boolean
        isPrimary:
          type: boolean
        mailId:
          type: string
        isConfirmed:
          type: boolean
      type: object
    VacationResponse:
      example:
        fromDate: 2000-01-23
        accountId: accountId
        subject: subject
        toDate: 2000-01-23
        content: content
        vacationId: vacationId
      properties:
        subject:
          type: string
        fromDate:
          format: date
          type: string
        toDate:
          format: date
          type: string
        content:
          type: string
        accountId:
          type: string
        vacationId:
          type: string
      type: object
    SendMailDetails:
      example:
        sendMailId: sendMailId
        displayName: displayName
        serverName: serverName
        fromAddress: fromAddress
        serverPort: 0
        userName: userName
        connectionType: connectionType
        status: true
      properties:
        sendMailId:
          type: string
        displayName:
          type: string
        serverName:
          type: string
        serverPort:
          type: integer
        userName:
          type: string
        connectionType:
          type: string
        fromAddress:
          type: string
        status:
          type: boolean
      type: object
    Address:
      example:
        country: country
        streetAddr: streetAddr
        city: city
        postalCode: postalCode
        state: state
      properties:
        country:
          type: string
        streetAddr:
          type: string
        city:
          type: string
        postalCode:
          type: string
        state:
          type: string
      type: object
    Folder:
      example:
        path: /new
        previousFolderId: "2560636000000076001"
        isArchived: 0
        folderName: new
        imapAccess: true
        folderType: Inbox
        URI: https://mail.zoho.com/api/accounts/N****C0CM/folders/2560636000000076007
        folderId: "2560636000000076007"
      properties:
        path:
          example: /new
          type: string
        previousFolderId:
          example: "2560636000000076001"
          type: string
        isArchived:
          example: 0
          type: integer
        folderName:
          example: new
          type: string
        imapAccess:
          example: true
          type: boolean
        folderType:
          example: Inbox
          type: string
        URI:
          example: https://mail.zoho.com/api/accounts/N****C0CM/folders/2560636000000076007
          type: string
        folderId:
          example: "2560636000000076007"
          type: string
      type: object
    FolderUpdateMode:
      enum:
      - move
      - rename
      - setViewableInIMAP
      - removeViewableInIMAP
      - markAsRead
      - emptyFolder
      type: string
    FolderUpdatePayload:
      example:
        mode: move
        previousFolderId: "2560636000000076001"
        parentFolderId: "2560636000000076001"
        folderName: folderName
      properties:
        mode:
          $ref: '#/components/schemas/FolderUpdateMode'
        parentFolderId:
          description: This parameter refers to the folder ID of the destination parent
            folder where the folder should be moved.
          example: "2560636000000076001"
          type: string
        previousFolderId:
          description: This parameter refers to the folder ID of a specific folder
            under the destination parent folder. This determines the exact position
            where the folder should be placed.
          example: "2560636000000076001"
          type: string
        folderName:
          description: This parameter refers to the new name of the folder.
          type: string
      required:
      - mode
      type: object
    Email:
      example:
        summary: summary
        sentDateInGMT: 0
        calendarType: 6
        subject: subject
        messageId: messageId
        threadCount: threadCount
        flagid: flagid
        status2: status2
        priority: priority
        hasInline: hasInline
        toAddress: toAddress
        folderId: folderId
        ccAddress: ccAddress
        threadId: threadId
        hasAttachment: hasAttachment
        size: size
        sender: sender
        receivedTime: 1
        fromAddress: fromAddress
        status: status
      properties:
        summary:
          description: A brief summary of the email.
          type: string
        sentDateInGMT:
          description: "The sent date of the email in GMT, represented as a Unix timestamp\
            \ in milliseconds."
          format: int64
          type: integer
        calendarType:
          description: The type of calendar associated with the email.
          type: integer
        subject:
          description: The subject of the email.
          type: string
        messageId:
          description: The unique identifier of the email message.
          type: string
        threadCount:
          description: The number of emails in the thread.
          type: string
        flagid:
          description: "The flag identifier associated with the email (e.g., flag_not_set)."
          type: string
        status2:
          description: An alternative status code for the email.
          type: string
        priority:
          description: The priority of the email.
          type: string
        hasInline:
          description: "Indicates whether the email has inline content (true/false,\
            \ represented as string)."
          type: string
        toAddress:
          description: "The recipient's email address, including display name."
          type: string
        folderId:
          description: The unique identifier of the folder containing the email.
          type: string
        ccAddress:
          description: "The CC recipient's email address, or \"Not Provided\"."
          type: string
        threadId:
          description: The unique identifier of the email thread.
          type: string
        hasAttachment:
          description: "Indicates whether the email has attachments (0 or 1, represented\
            \ as string)."
          type: string
        size:
          description: The size of the email.
          type: string
        sender:
          description: The sender's display name.
          type: string
        receivedTime:
          description: "The received time of the email, represented as a Unix timestamp\
            \ in milliseconds."
          format: int64
          type: integer
        fromAddress:
          description: The sender's email address.
          type: string
        status:
          description: "The status of the email (e.g., 1 for read, 0 for unread)."
          type: string
      type: object
    createFolder_request:
      properties:
        folderName:
          description: The name of the folder to be created.
          example: newFolder
          type: string
        parentFolderId:
          description: The ID of the parent folder under which the new folder is created.
          example: "2560636000000076001"
          type: string
        parentFolderPath:
          description: The path of the parent folder under which the new folder is
            created.
          example: /Inbox
          type: string
      required:
      - folderName
      type: object
  securitySchemes:
    zohomail_auth:
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.zoho.com/oauth/v2/auth
          scopes:
            ZohoMail.accounts.ALL: Full access to accounts.
            ZohoMail.accounts.READ: READ access to accounts.
            ZohoMail.folders.ALL: Full access to folders.
            ZohoMail.folders.CREATE: Create a folder.
          tokenUrl: https://accounts.zoho.com/oauth/v2/token
      type: oauth2
