/*
Zoho Mail API

This is a Zoho Mail API OpenAPI 3.0 specification

API version: 1.0.0
Contact: vigneshwaran4817@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zmail

import (
	"encoding/json"
)

// checks if the EmailHeaderDetailsHeaderContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailHeaderDetailsHeaderContent{}

// EmailHeaderDetailsHeaderContent struct for EmailHeaderDetailsHeaderContent
type EmailHeaderDetailsHeaderContent struct {
	Importance []string `json:"Importance,omitempty"`
	XMailer []string `json:"X-Mailer,omitempty"`
	XZohoVirusStatus []string `json:"X-Zoho-Virus-Status,omitempty"`
	Received []string `json:"Received,omitempty"`
	UserAgent []string `json:"User-Agent,omitempty"`
	From []string `json:"From,omitempty"`
	To []string `json:"To,omitempty"`
	MessageId []string `json:"Message-Id,omitempty"`
	Date []string `json:"Date,omitempty"`
	Subject []string `json:"Subject,omitempty"`
	MIMEVersion []string `json:"MIME-Version,omitempty"`
	ContentType []string `json:"Content-Type,omitempty"`
}

// NewEmailHeaderDetailsHeaderContent instantiates a new EmailHeaderDetailsHeaderContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailHeaderDetailsHeaderContent() *EmailHeaderDetailsHeaderContent {
	this := EmailHeaderDetailsHeaderContent{}
	return &this
}

// NewEmailHeaderDetailsHeaderContentWithDefaults instantiates a new EmailHeaderDetailsHeaderContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailHeaderDetailsHeaderContentWithDefaults() *EmailHeaderDetailsHeaderContent {
	this := EmailHeaderDetailsHeaderContent{}
	return &this
}

// GetImportance returns the Importance field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetImportance() []string {
	if o == nil || IsNil(o.Importance) {
		var ret []string
		return ret
	}
	return o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetImportanceOk() ([]string, bool) {
	if o == nil || IsNil(o.Importance) {
		return nil, false
	}
	return o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasImportance() bool {
	if o != nil && !IsNil(o.Importance) {
		return true
	}

	return false
}

// SetImportance gets a reference to the given []string and assigns it to the Importance field.
func (o *EmailHeaderDetailsHeaderContent) SetImportance(v []string) {
	o.Importance = v
}

// GetXMailer returns the XMailer field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetXMailer() []string {
	if o == nil || IsNil(o.XMailer) {
		var ret []string
		return ret
	}
	return o.XMailer
}

// GetXMailerOk returns a tuple with the XMailer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetXMailerOk() ([]string, bool) {
	if o == nil || IsNil(o.XMailer) {
		return nil, false
	}
	return o.XMailer, true
}

// HasXMailer returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasXMailer() bool {
	if o != nil && !IsNil(o.XMailer) {
		return true
	}

	return false
}

// SetXMailer gets a reference to the given []string and assigns it to the XMailer field.
func (o *EmailHeaderDetailsHeaderContent) SetXMailer(v []string) {
	o.XMailer = v
}

// GetXZohoVirusStatus returns the XZohoVirusStatus field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetXZohoVirusStatus() []string {
	if o == nil || IsNil(o.XZohoVirusStatus) {
		var ret []string
		return ret
	}
	return o.XZohoVirusStatus
}

// GetXZohoVirusStatusOk returns a tuple with the XZohoVirusStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetXZohoVirusStatusOk() ([]string, bool) {
	if o == nil || IsNil(o.XZohoVirusStatus) {
		return nil, false
	}
	return o.XZohoVirusStatus, true
}

// HasXZohoVirusStatus returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasXZohoVirusStatus() bool {
	if o != nil && !IsNil(o.XZohoVirusStatus) {
		return true
	}

	return false
}

// SetXZohoVirusStatus gets a reference to the given []string and assigns it to the XZohoVirusStatus field.
func (o *EmailHeaderDetailsHeaderContent) SetXZohoVirusStatus(v []string) {
	o.XZohoVirusStatus = v
}

// GetReceived returns the Received field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetReceived() []string {
	if o == nil || IsNil(o.Received) {
		var ret []string
		return ret
	}
	return o.Received
}

// GetReceivedOk returns a tuple with the Received field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetReceivedOk() ([]string, bool) {
	if o == nil || IsNil(o.Received) {
		return nil, false
	}
	return o.Received, true
}

// HasReceived returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasReceived() bool {
	if o != nil && !IsNil(o.Received) {
		return true
	}

	return false
}

// SetReceived gets a reference to the given []string and assigns it to the Received field.
func (o *EmailHeaderDetailsHeaderContent) SetReceived(v []string) {
	o.Received = v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetUserAgent() []string {
	if o == nil || IsNil(o.UserAgent) {
		var ret []string
		return ret
	}
	return o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetUserAgentOk() ([]string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given []string and assigns it to the UserAgent field.
func (o *EmailHeaderDetailsHeaderContent) SetUserAgent(v []string) {
	o.UserAgent = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetFrom() []string {
	if o == nil || IsNil(o.From) {
		var ret []string
		return ret
	}
	return o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetFromOk() ([]string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given []string and assigns it to the From field.
func (o *EmailHeaderDetailsHeaderContent) SetFrom(v []string) {
	o.From = v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetTo() []string {
	if o == nil || IsNil(o.To) {
		var ret []string
		return ret
	}
	return o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetToOk() ([]string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given []string and assigns it to the To field.
func (o *EmailHeaderDetailsHeaderContent) SetTo(v []string) {
	o.To = v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetMessageId() []string {
	if o == nil || IsNil(o.MessageId) {
		var ret []string
		return ret
	}
	return o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetMessageIdOk() ([]string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given []string and assigns it to the MessageId field.
func (o *EmailHeaderDetailsHeaderContent) SetMessageId(v []string) {
	o.MessageId = v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetDate() []string {
	if o == nil || IsNil(o.Date) {
		var ret []string
		return ret
	}
	return o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetDateOk() ([]string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given []string and assigns it to the Date field.
func (o *EmailHeaderDetailsHeaderContent) SetDate(v []string) {
	o.Date = v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetSubject() []string {
	if o == nil || IsNil(o.Subject) {
		var ret []string
		return ret
	}
	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetSubjectOk() ([]string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given []string and assigns it to the Subject field.
func (o *EmailHeaderDetailsHeaderContent) SetSubject(v []string) {
	o.Subject = v
}

// GetMIMEVersion returns the MIMEVersion field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetMIMEVersion() []string {
	if o == nil || IsNil(o.MIMEVersion) {
		var ret []string
		return ret
	}
	return o.MIMEVersion
}

// GetMIMEVersionOk returns a tuple with the MIMEVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetMIMEVersionOk() ([]string, bool) {
	if o == nil || IsNil(o.MIMEVersion) {
		return nil, false
	}
	return o.MIMEVersion, true
}

// HasMIMEVersion returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasMIMEVersion() bool {
	if o != nil && !IsNil(o.MIMEVersion) {
		return true
	}

	return false
}

// SetMIMEVersion gets a reference to the given []string and assigns it to the MIMEVersion field.
func (o *EmailHeaderDetailsHeaderContent) SetMIMEVersion(v []string) {
	o.MIMEVersion = v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *EmailHeaderDetailsHeaderContent) GetContentType() []string {
	if o == nil || IsNil(o.ContentType) {
		var ret []string
		return ret
	}
	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailHeaderDetailsHeaderContent) GetContentTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *EmailHeaderDetailsHeaderContent) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given []string and assigns it to the ContentType field.
func (o *EmailHeaderDetailsHeaderContent) SetContentType(v []string) {
	o.ContentType = v
}

func (o EmailHeaderDetailsHeaderContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailHeaderDetailsHeaderContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Importance) {
		toSerialize["Importance"] = o.Importance
	}
	if !IsNil(o.XMailer) {
		toSerialize["X-Mailer"] = o.XMailer
	}
	if !IsNil(o.XZohoVirusStatus) {
		toSerialize["X-Zoho-Virus-Status"] = o.XZohoVirusStatus
	}
	if !IsNil(o.Received) {
		toSerialize["Received"] = o.Received
	}
	if !IsNil(o.UserAgent) {
		toSerialize["User-Agent"] = o.UserAgent
	}
	if !IsNil(o.From) {
		toSerialize["From"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["To"] = o.To
	}
	if !IsNil(o.MessageId) {
		toSerialize["Message-Id"] = o.MessageId
	}
	if !IsNil(o.Date) {
		toSerialize["Date"] = o.Date
	}
	if !IsNil(o.Subject) {
		toSerialize["Subject"] = o.Subject
	}
	if !IsNil(o.MIMEVersion) {
		toSerialize["MIME-Version"] = o.MIMEVersion
	}
	if !IsNil(o.ContentType) {
		toSerialize["Content-Type"] = o.ContentType
	}
	return toSerialize, nil
}

type NullableEmailHeaderDetailsHeaderContent struct {
	value *EmailHeaderDetailsHeaderContent
	isSet bool
}

func (v NullableEmailHeaderDetailsHeaderContent) Get() *EmailHeaderDetailsHeaderContent {
	return v.value
}

func (v *NullableEmailHeaderDetailsHeaderContent) Set(val *EmailHeaderDetailsHeaderContent) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailHeaderDetailsHeaderContent) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailHeaderDetailsHeaderContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailHeaderDetailsHeaderContent(val *EmailHeaderDetailsHeaderContent) *NullableEmailHeaderDetailsHeaderContent {
	return &NullableEmailHeaderDetailsHeaderContent{value: val, isSet: true}
}

func (v NullableEmailHeaderDetailsHeaderContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailHeaderDetailsHeaderContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


