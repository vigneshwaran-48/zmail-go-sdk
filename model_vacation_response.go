/*
Zoho Mail API

This is a Zoho Mail API OpenAPI 3.0 specification

API version: 1.0.0
Contact: vigneshwaran4817@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zmail

import (
	"encoding/json"
)

// checks if the VacationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VacationResponse{}

// VacationResponse struct for VacationResponse
type VacationResponse struct {
	Subject *string `json:"subject,omitempty"`
	FromDate *string `json:"fromDate,omitempty"`
	ToDate *string `json:"toDate,omitempty"`
	Content *string `json:"content,omitempty"`
	AccountId *string `json:"accountId,omitempty"`
	VacationId *string `json:"vacationId,omitempty"`
}

// NewVacationResponse instantiates a new VacationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVacationResponse() *VacationResponse {
	this := VacationResponse{}
	return &this
}

// NewVacationResponseWithDefaults instantiates a new VacationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVacationResponseWithDefaults() *VacationResponse {
	this := VacationResponse{}
	return &this
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *VacationResponse) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacationResponse) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *VacationResponse) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *VacationResponse) SetSubject(v string) {
	o.Subject = &v
}

// GetFromDate returns the FromDate field value if set, zero value otherwise.
func (o *VacationResponse) GetFromDate() string {
	if o == nil || IsNil(o.FromDate) {
		var ret string
		return ret
	}
	return *o.FromDate
}

// GetFromDateOk returns a tuple with the FromDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacationResponse) GetFromDateOk() (*string, bool) {
	if o == nil || IsNil(o.FromDate) {
		return nil, false
	}
	return o.FromDate, true
}

// HasFromDate returns a boolean if a field has been set.
func (o *VacationResponse) HasFromDate() bool {
	if o != nil && !IsNil(o.FromDate) {
		return true
	}

	return false
}

// SetFromDate gets a reference to the given string and assigns it to the FromDate field.
func (o *VacationResponse) SetFromDate(v string) {
	o.FromDate = &v
}

// GetToDate returns the ToDate field value if set, zero value otherwise.
func (o *VacationResponse) GetToDate() string {
	if o == nil || IsNil(o.ToDate) {
		var ret string
		return ret
	}
	return *o.ToDate
}

// GetToDateOk returns a tuple with the ToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacationResponse) GetToDateOk() (*string, bool) {
	if o == nil || IsNil(o.ToDate) {
		return nil, false
	}
	return o.ToDate, true
}

// HasToDate returns a boolean if a field has been set.
func (o *VacationResponse) HasToDate() bool {
	if o != nil && !IsNil(o.ToDate) {
		return true
	}

	return false
}

// SetToDate gets a reference to the given string and assigns it to the ToDate field.
func (o *VacationResponse) SetToDate(v string) {
	o.ToDate = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *VacationResponse) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacationResponse) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *VacationResponse) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *VacationResponse) SetContent(v string) {
	o.Content = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *VacationResponse) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacationResponse) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *VacationResponse) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *VacationResponse) SetAccountId(v string) {
	o.AccountId = &v
}

// GetVacationId returns the VacationId field value if set, zero value otherwise.
func (o *VacationResponse) GetVacationId() string {
	if o == nil || IsNil(o.VacationId) {
		var ret string
		return ret
	}
	return *o.VacationId
}

// GetVacationIdOk returns a tuple with the VacationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacationResponse) GetVacationIdOk() (*string, bool) {
	if o == nil || IsNil(o.VacationId) {
		return nil, false
	}
	return o.VacationId, true
}

// HasVacationId returns a boolean if a field has been set.
func (o *VacationResponse) HasVacationId() bool {
	if o != nil && !IsNil(o.VacationId) {
		return true
	}

	return false
}

// SetVacationId gets a reference to the given string and assigns it to the VacationId field.
func (o *VacationResponse) SetVacationId(v string) {
	o.VacationId = &v
}

func (o VacationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VacationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.FromDate) {
		toSerialize["fromDate"] = o.FromDate
	}
	if !IsNil(o.ToDate) {
		toSerialize["toDate"] = o.ToDate
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.VacationId) {
		toSerialize["vacationId"] = o.VacationId
	}
	return toSerialize, nil
}

type NullableVacationResponse struct {
	value *VacationResponse
	isSet bool
}

func (v NullableVacationResponse) Get() *VacationResponse {
	return v.value
}

func (v *NullableVacationResponse) Set(val *VacationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVacationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVacationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVacationResponse(val *VacationResponse) *NullableVacationResponse {
	return &NullableVacationResponse{value: val, isSet: true}
}

func (v NullableVacationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVacationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


